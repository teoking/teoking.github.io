<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Threading on Teoking writes something.</title>
    <link>https://teoking.github.io/categories/threading/</link>
    <description>Recent content in Threading on Teoking writes something.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 06 May 2021 18:19:57 +0800</lastBuildDate><atom:link href="https://teoking.github.io/categories/threading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RxSwift和RxCocoa入门</title>
      <link>https://teoking.github.io/post/getting_started_with_rxswift_and_rxcocoa/</link>
      <pubDate>Thu, 06 May 2021 18:19:57 +0800</pubDate>
      
      <guid>https://teoking.github.io/post/getting_started_with_rxswift_and_rxcocoa/</guid>
      <description>本文主要来自Getting Started With RxSwift and RxCocoa这篇文章 命令式编程 vs 响应式编程 目前大部分面向对象语言都是命令式的编程范式，即通过代码下达命令</description>
    </item>
    
    <item>
      <title>Kotlin Coroutine in Action</title>
      <link>https://teoking.github.io/post/kotlin_coroutine_in_action/</link>
      <pubDate>Thu, 06 May 2021 17:46:28 +0800</pubDate>
      
      <guid>https://teoking.github.io/post/kotlin_coroutine_in_action/</guid>
      <description>这篇文章是我对团队内的一次技术分享 Outline What is Kotlin Coroutine? 协程什么？解决了什么问题？ 协程概念核心点：函数或一段程序能够被挂起，稍后再在挂起的位置恢复。 与线</description>
    </item>
    
  </channel>
</rss>
