<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UI on Teoking writes something.</title>
    <link>https://teoking.github.io/categories/ui/</link>
    <description>Recent content in UI on Teoking writes something.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Jun 2021 20:42:07 +0800</lastBuildDate><atom:link href="https://teoking.github.io/categories/ui/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Canvas API Demo及性能优化</title>
      <link>https://teoking.github.io/post/learn_android_canvas_by_samples/</link>
      <pubDate>Tue, 08 Jun 2021 20:42:07 +0800</pubDate>
      
      <guid>https://teoking.github.io/post/learn_android_canvas_by_samples/</guid>
      <description>本片文章通过两个例子来看一下Canvas API的用法，以及如何通过HWUI Trace和Profiler测试性能并进行优化。 示例一：手指涂鸦 doodle</description>
    </item>
    
    <item>
      <title>ScrollView中大图片渲染性能测试及优化</title>
      <link>https://teoking.github.io/post/large_bitmap_rendering_optimization/</link>
      <pubDate>Fri, 21 May 2021 19:25:10 +0800</pubDate>
      
      <guid>https://teoking.github.io/post/large_bitmap_rendering_optimization/</guid>
      <description>编辑器UI中的性能问题 在编辑器的拼长图功能中，ScrollView最多容纳9个image view（自定义的图片view，非ImageView</description>
    </item>
    
    <item>
      <title>Android渲染Part1:  帧渲染</title>
      <link>https://teoking.github.io/post/android_render_part1/</link>
      <pubDate>Fri, 14 May 2021 14:47:46 +0800</pubDate>
      
      <guid>https://teoking.github.io/post/android_render_part1/</guid>
      <description>这篇文章是Chet Haase和Romain Guy做的&amp;lt;Drawn out: How Android renders (Google I/O &amp;lsquo;18)&amp;gt;演讲的翻译。由于内容较多分为两</description>
    </item>
    
    <item>
      <title>iOS - CollectionViewCell对应不同flow layout的实例</title>
      <link>https://teoking.github.io/post/ios_collectionviewcell_with_different_flowlayout/</link>
      <pubDate>Thu, 06 May 2021 19:11:28 +0800</pubDate>
      
      <guid>https://teoking.github.io/post/ios_collectionviewcell_with_different_flowlayout/</guid>
      <description>UI交互 最近实现如下UI界面： 交互细节大致如下： 外部UICollectionView启用paging，左右滑动切换cell Cell（A/B/</description>
    </item>
    
    <item>
      <title>Android VectorDrawable系列文章Review</title>
      <link>https://teoking.github.io/post/android_vectordrawable_guides_notes/</link>
      <pubDate>Thu, 06 May 2021 19:05:47 +0800</pubDate>
      
      <guid>https://teoking.github.io/post/android_vectordrawable_guides_notes/</guid>
      <description>该系列文章作者是Android团队的Nick Butcher： Understanding Android’s vector image format: VectorDrawable Draw a Path: Rendering Android VectorDrawables Using vector assets in Android apps Vector Assets - Android Conference Talks Vector Drawabl</description>
    </item>
    
    <item>
      <title>iOS touch事件的拦截</title>
      <link>https://teoking.github.io/post/intercept_touch_event_in_ios/</link>
      <pubDate>Thu, 06 May 2021 18:59:24 +0800</pubDate>
      
      <guid>https://teoking.github.io/post/intercept_touch_event_in_ios/</guid>
      <description>最近实现了这样一个需求：当点击一个全屏的modal view时，这个事件同时要“转发”给modal view下面一层中的action view。 分</description>
    </item>
    
    <item>
      <title>Android中绘制圆角的三种方式</title>
      <link>https://teoking.github.io/post/draw_round_corner_3ways_in_android/</link>
      <pubDate>Thu, 06 May 2021 17:52:46 +0800</pubDate>
      
      <guid>https://teoking.github.io/post/draw_round_corner_3ways_in_android/</guid>
      <description>在iOS平台中，给View指定圆角是很方便的。只需要在代码中设置layer.cornerRadius即可。但在Android平台中，事情却有</description>
    </item>
    
    <item>
      <title>Android GLES基础：从TextRender看Renderer实现</title>
      <link>https://teoking.github.io/post/implement_an_gles_renderer_in_android/</link>
      <pubDate>Thu, 06 May 2021 17:42:32 +0800</pubDate>
      
      <guid>https://teoking.github.io/post/implement_an_gles_renderer_in_android/</guid>
      <description>以AOSP Media CTS中的TextureRender的实现来分析和理解OpenGL ES 2.0在Android平台的使用。 通常，实现一个render</description>
    </item>
    
  </channel>
</rss>
